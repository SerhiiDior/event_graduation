{"name": "test_authorization[data1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert None\n +  where None = <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x0000027A3A78FA08>>(('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)'))\n +    where <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x0000027A3A78FA08>> = <Base.base.BaseSetup object at 0x0000027A3A78FA08>.check_if_element_exists\n +      where <Base.base.BaseSetup object at 0x0000027A3A78FA08> = <utilities.testFrame.InitPages object at 0x0000027A3A740248>.base\n +    and   ('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)') = locator.PROFILE", "trace": "app = <utilities.testFrame.InitPages object at 0x0000027A3A740248>, data = ['admin2@gmail.com', '1qaz1qaz'], screenshot_on_failure = None\n\n    @allure.link(\"http://localhost:57690/home/events?page=1\", name='Click me')\n    @allure.feature('Login User')\n    @allure.story('\"Actors\" login to site EventExpress ')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize('data', credentials())\n    def test_authorization(app, data, screenshot_on_failure):\n        app.auth.click_on_login_button()\n        app.auth.clean_login_field( )\n        app.auth.type_login(data[0])\n        app.auth.clean_password_field( )\n        app.auth.type_pass(data[1])\n        app.auth.press_button_signin()\n>       assert app.base.check_if_element_exists( locator.PROFILE )\nE       AssertionError: assert None\nE        +  where None = <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x0000027A3A78FA08>>(('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)'))\nE        +    where <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x0000027A3A78FA08>> = <Base.base.BaseSetup object at 0x0000027A3A78FA08>.check_if_element_exists\nE        +      where <Base.base.BaseSetup object at 0x0000027A3A78FA08> = <utilities.testFrame.InitPages object at 0x0000027A3A740248>.base\nE        +    and   ('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)') = locator.PROFILE\n\ntest_auth.py:23: AssertionError"}, "attachments": [{"name": "stdout", "source": "093fec82-7b4a-4644-b3a8-44a63152ac25-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "['admin2@gmail.com', '1qaz1qaz']"}], "start": 1577191578614, "stop": 1577191591789, "uuid": "91cd6b68-0c18-49e2-8a24-70ece99e96fb", "historyId": "307b3e81a3c9742e74203e6924c08bb2", "testCaseId": "2a55ae64119e6f3ed897e368050f6f6b", "fullName": "Tests.test_auth#test_authorization", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "\"Actors\" login to site EventExpress "}, {"name": "feature", "value": "Login User"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_auth"}, {"name": "host", "value": "Jesus-Laptop"}, {"name": "thread", "value": "16472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_auth"}], "links": [{"type": "link", "url": "http://localhost:57690/home/events?page=1", "name": "Click me"}]}