{
  "uid" : "3223326129a6a982",
  "name" : "test_authorization[data1]",
  "fullName" : "Tests.test_auth#test_authorization",
  "historyId" : "307b3e81a3c9742e74203e6924c08bb2",
  "time" : {
    "start" : 1577184837366,
    "stop" : 1577184849190,
    "duration" : 11824
  },
  "description" : "Verify if user with incorrect data could login",
  "descriptionHtml" : "<p>Verify if user with incorrect data could login</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Elemement not found\nassert None\n +  where None = <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>>(('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)'))\n +    where <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>> = <Base.base.BaseSetup object at 0x04097F50>.check_if_element_exists\n +      where <Base.base.BaseSetup object at 0x04097F50> = <utilities.testFrame.InitPages object at 0x04097D50>.base\n +    and   ('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)') = locator.PROFILE",
  "statusTrace" : "app = <utilities.testFrame.InitPages object at 0x04097D50>, data = ['ad1min@gmail.com', '1qaz1qaz'], screenshot_on_failure = None\n\n    @allure.link(\"http://localhost:3183/home/events?page=1\", name='Click me')\n    @allure.feature('Login User')\n    @allure.story('\"Actors\" login to site EventExpress ')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description('Verify if user with incorrect data could login')\n    @pytest.mark.parametrize('data',credentials())\n    def test_authorization(app,data,screenshot_on_failure):\n        app.auth.click_on_login_button()\n        app.auth.clean_login_field( )\n        app.auth.type_login(data[0])\n        app.auth.clean_password_field( )\n        app.auth.type_pass(data[1])\n        app.auth.press_button_signin()\n>       assert app.base.check_if_element_exists( locator.PROFILE ), \"Elemement not found\"\nE       AssertionError: Elemement not found\nE       assert None\nE        +  where None = <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>>(('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)'))\nE        +    where <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>> = <Base.base.BaseSetup object at 0x04097F50>.check_if_element_exists\nE        +      where <Base.base.BaseSetup object at 0x04097F50> = <utilities.testFrame.InitPages object at 0x04097D50>.base\nE        +    and   ('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)') = locator.PROFILE\n\nTests\\test_auth.py:28: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_driver",
    "time" : {
      "start" : 1577184830386,
      "stop" : 1577184837363,
      "duration" : 6977
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "screenshot_on_failure",
    "time" : {
      "start" : 1577184837364,
      "stop" : 1577184837364,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1577184837364,
      "stop" : 1577184837364,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "Verify if user with incorrect data could login",
    "status" : "failed",
    "statusMessage" : "AssertionError: Elemement not found\nassert None\n +  where None = <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>>(('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)'))\n +    where <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>> = <Base.base.BaseSetup object at 0x04097F50>.check_if_element_exists\n +      where <Base.base.BaseSetup object at 0x04097F50> = <utilities.testFrame.InitPages object at 0x04097D50>.base\n +    and   ('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)') = locator.PROFILE",
    "statusTrace" : "app = <utilities.testFrame.InitPages object at 0x04097D50>, data = ['ad1min@gmail.com', '1qaz1qaz'], screenshot_on_failure = None\n\n    @allure.link(\"http://localhost:3183/home/events?page=1\", name='Click me')\n    @allure.feature('Login User')\n    @allure.story('\"Actors\" login to site EventExpress ')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description('Verify if user with incorrect data could login')\n    @pytest.mark.parametrize('data',credentials())\n    def test_authorization(app,data,screenshot_on_failure):\n        app.auth.click_on_login_button()\n        app.auth.clean_login_field( )\n        app.auth.type_login(data[0])\n        app.auth.clean_password_field( )\n        app.auth.type_pass(data[1])\n        app.auth.press_button_signin()\n>       assert app.base.check_if_element_exists( locator.PROFILE ), \"Elemement not found\"\nE       AssertionError: Elemement not found\nE       assert None\nE        +  where None = <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>>(('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)'))\nE        +    where <bound method BaseSetup.check_if_element_exists of <Base.base.BaseSetup object at 0x04097F50>> = <Base.base.BaseSetup object at 0x04097F50>.check_if_element_exists\nE        +      where <Base.base.BaseSetup object at 0x04097F50> = <utilities.testFrame.InitPages object at 0x04097D50>.base\nE        +    and   ('css selector', 'nav ul.list-unstyled .sidebar-header:nth-child(2)') = locator.PROFILE\n\nTests\\test_auth.py:28: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "99da27f0bd5e1867",
      "name" : "stdout",
      "source" : "99da27f0bd5e1867.txt",
      "type" : "text/plain",
      "size" : 326
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "get_driver::0",
    "time" : {
      "start" : 1577184849468,
      "stop" : 1577184851863,
      "duration" : 2395
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "screenshot_on_failure::0",
    "time" : {
      "start" : 1577184849326,
      "stop" : 1577184849467,
      "duration" : 141
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "852ed314cd516d40",
      "name" : "test_authorization",
      "source" : "852ed314cd516d40.png",
      "type" : "image/png",
      "size" : 41853
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Login User"
  }, {
    "name" : "story",
    "value" : "\"Actors\" login to site EventExpress "
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_auth"
  }, {
    "name" : "host",
    "value" : "LAPTOP-TPL3FHC5"
  }, {
    "name" : "thread",
    "value" : "3640-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_auth"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "['ad1min@gmail.com', '1qaz1qaz']"
  } ],
  "links" : [ {
    "name" : "Click me",
    "url" : "http://localhost:3183/home/events?page=1",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "3223326129a6a982.json",
  "parameterValues" : [ "['ad1min@gmail.com', '1qaz1qaz']" ]
}